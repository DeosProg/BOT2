if '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é' in message.text:
        try:
            with open('DZ', 'r', encoding='utf-8') as f:
                lines = f.readlines()
                pn = lines[0]
                sr = lines[2]
                ch = lines[3]
                pt = lines[4]
                sb = lines[5]
                bot.send_message(message.chat.id, texts.homework.format(pn=pn, sr=sr, ch=ch, pt=pt, sb=sb),
                                 reply_markup=keyboard)
        except Exception as exc:
            print(exc)
            traceback.print_exc()


    if '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥. –Ω–µ–¥–µ–ª—é' in message.text:
        try:
            with open('DZ2', 'r', encoding='utf-8') as f:
                lines = f.readlines()
                pn = lines[0]
                sr = lines[2]
                ch = lines[3]
                pt = lines[4]
                sb = lines[5]
                bot.send_message(message.chat.id, texts.homework2.format(pn=pn, sr=sr, ch=ch, pt=pt, sb=sb),
                                 reply_markup=keyboard)
        except Exception as exc:
            print(exc)
            traceback.print_exc()
if '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞' in message.text:
        try:
            c_date = date.today()
            day = str(int(c_date.day) + 1) + ' '
            month = months[int(c_date.month)]
            pairs = timetable_processing.get_timetable_tomorrow()
            try:
                if pairs[5] == '–ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–∞—è':
                    place = '–Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π'
                else:
                    place = '–Ω–∞ –û–∫—Ç—è–±—Ä—å—Å–∫–æ–º –ø–æ–ª–µ'
            except:
                place = '–Ω–∏–≥–¥–µ'
            bot.send_message(message.chat.id,
                             texts.timetables_text.format(
                                 day=day + month,
                                 place=place,
                                 pair1=pairs[0],
                                 pair2=pairs[1],
                                 pair3=pairs[2],
                                 pair4=pairs[3],
                                 pair5=pairs[4],
                                 parse_mode="Markdown"))
            bot.send_message(message.chat.id, texts.main, reply_markup=keyboard)
        except Exception as exc:
            print(exc)
            traceback.print_exc()
    if '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è' in message.text:
        try:
            c_date = date.today()
            day = str(c_date.day) + ' '
            month = months[int(c_date.month)]
            pairs = timetable_processing.get_timetable_today()
            try:
                if pairs[5] == '–ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–∞—è':
                    place = '–Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π'
                else:
                    place = '–Ω–∞ –û–∫—Ç—è–±—Ä—å—Å–∫–æ–º –ø–æ–ª–µ'
            except:
                place = '–Ω–∏–≥–¥–µ'
            bot.send_message(message.chat.id,
                             texts.timetables_text.format(
                                 day=day + month,
                                 place=place,
                                 pair1=pairs[0],
                                 pair2=pairs[1],
                                 pair3=pairs[2],
                                 pair4=pairs[3],
                                 pair5=pairs[4],
                                 parse_mode="Markdown"))
            bot.send_message(message.chat.id, texts.main, reply_markup=keyboard)
        except Exception as exc:
            print(exc)
            traceback.print_exc()
#–î–û–ú–ê–®–ù–ï–ï –ó–ê–î–ê–ù–ò–ï-------------------------------------------------------
        if call.data == '0':
            try:
                with open('DZ', 'r', encoding='utf-8') as f:
                    lines = f.readlines()
                    pn = lines[0]
                    sr = lines[2]
                    ch = lines[3]
                    pt = lines[4]
                    sb = lines[5]
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=texts.homework.format(pn=pn, sr=sr, ch=ch, pt=pt, sb=sb) )
            except Exception as exc:
                print(exc)
                traceback.print_exc()
        elif call.data == '1':
            try:
                with open('DZ2', 'r', encoding='utf-8') as f:
                    lines = f.readlines()
                    pn = lines[0]
                    sr = lines[2]
                    ch = lines[3]
                    pt = lines[4]
                    sb = lines[5]
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=texts.homework2.format(pn=pn, sr=sr, ch=ch, pt=pt, sb=sb) )
            except Exception as exc:
                print(exc)
                traceback.print_exc()

#day1 = str(c_date.day)
#day2 = str(int(c_date.day) + 1) + ' '
#button_1 = types.KeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ " + cal(day2))
#button_2 = types.KeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è " + cal(day1))
#button_3 = types.KeyboardButton(text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—éüìñ")
#button_4 = types.KeyboardButton(text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥. –Ω–µ–¥–µ–ª—éüìò")